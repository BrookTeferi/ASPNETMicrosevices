services:
  aspnetrunbasics:
    build:
      context: C:\Users\hope\source\repos\ASPNETMicrosevices\ASPNETrun-microsevices
      dockerfile: WebApps/AspnetRunBasics/Dockerfile
    image: aspnetrunbasics
  basket.api:
    build:
      context: C:\Users\hope\source\repos\ASPNETMicrosevices\ASPNETrun-microsevices
      dockerfile: Services/Basket/Basket.API/Dockerfile
    image: basketapi
  basketdb:
    image: redis:alpine
  catalog.api:
    build:
      context: C:\Users\hope\source\repos\ASPNETMicrosevices\ASPNETrun-microsevices
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Catalog.API
      target: base
    container_name: Catalog.API
    entrypoint: tail -f /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DOTNET_USE_POLLING_FILE_WATCHER: '1'
      NUGET_FALLBACK_PACKAGES: ''
    image: catalogapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/bin/Debug/net6.0/Catalog.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    ports:
    - target: 80
    tty: true
    volumes:
    - C:\Users\hope\source\repos\ASPNETMicrosevices\ASPNETrun-microsevices\src\Services\Catalog\Catalog.API:/app:rw
    - C:\Users\hope\vsdbg\vs2017u5:/remote_debugger:rw
    - C:\Users\hope\AppData\Roaming\ASP.NET\Https:/root/.aspnet/https:ro
    - C:\Users\hope\AppData\Roaming\Microsoft\UserSecrets:/root/.microsoft/usersecrets:ro
    - C:\Users\hope\.nuget\packages:/root/.nuget/packages:ro
    - C:\Users\hope\source\repos\ASPNETMicrosevices\ASPNETrun-microsevices:/src:rw
  catalogdb:
    image: mongo
  discount.api:
    build:
      context: C:\Users\hope\source\repos\ASPNETMicrosevices\ASPNETrun-microsevices
      dockerfile: Services/Discount/Discount.API/Dockerfile
    image: discountapi
  discount.grpc:
    build:
      context: C:\Users\hope\source\repos\ASPNETMicrosevices\ASPNETrun-microsevices
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile
    image: discountgrpc
  discountdb:
    image: postgres
  ocelotapigw:
    build:
      context: C:\Users\hope\source\repos\ASPNETMicrosevices\ASPNETrun-microsevices
      dockerfile: ApiGateways/OcelotApiGw/Dockerfile
    image: ocelotapigw
  orderdb:
    image: mcr.microsoft.com/mssql/server:2017-latest
  ordering.api:
    build:
      context: C:\Users\hope\source\repos\ASPNETMicrosevices\ASPNETrun-microsevices
      dockerfile: Services/Ordering/Ordering.API/Dockerfile
    image: orderingapi
  pgadmin:
    image: dpage/pgadmin4
  portainer:
    image: portainer/portainer-ce
  rabbitmq:
    image: rabbitmq:3-management-alpine
  shopping.aggregator:
    build:
      context: C:\Users\hope\source\repos\ASPNETMicrosevices\ASPNETrun-microsevices
      dockerfile: ApiGateways/Shopping.Aggregator/Dockerfile
    image: shoppingaggregator
version: '3.4'
volumes:
  mongo_data: {}
  pgadmin_data: {}
  portainer_data: {}
  postgres_data: {}