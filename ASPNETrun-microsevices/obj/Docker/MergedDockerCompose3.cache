services:
  aspnetrunbasics:
    build:
      context: C:\Users\hope\source\repos\ASPNETMicrosevices\ASPNETrun-microsevices
      dockerfile: WebApps/AspnetRunBasics/Dockerfile
    image: aspnetrunbasics
  basket.api:
    build:
      context: C:\Users\hope\source\repos\ASPNETMicrosevices\ASPNETrun-microsevices
      dockerfile: Services/Basket/Basket.API/Dockerfile
    image: basketapi
  basketdb:
    image: redis:alpine
  catalog.api:
    build:
      context: C:\Users\hope\source\repos\ASPNETMicrosevices\ASPNETrun-microsevices
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: catalogapi
    ports:
    - target: 80
  catalogdb:
    image: mongo
  discount.api:
    build:
      context: C:\Users\hope\source\repos\ASPNETMicrosevices\ASPNETrun-microsevices
      dockerfile: Services/Discount/Discount.API/Dockerfile
    image: discountapi
  discount.grpc:
    build:
      context: C:\Users\hope\source\repos\ASPNETMicrosevices\ASPNETrun-microsevices
      dockerfile: Services/Discount/Discount.Grpc/Dockerfile
    image: discountgrpc
  discountdb:
    image: postgres
  ocelotapigw:
    build:
      context: C:\Users\hope\source\repos\ASPNETMicrosevices\ASPNETrun-microsevices
      dockerfile: ApiGateways/OcelotApiGw/Dockerfile
    image: ocelotapigw
  orderdb:
    image: mcr.microsoft.com/mssql/server:2017-latest
  ordering.api:
    build:
      context: C:\Users\hope\source\repos\ASPNETMicrosevices\ASPNETrun-microsevices
      dockerfile: Services/Ordering/Ordering.API/Dockerfile
    image: orderingapi
  pgadmin:
    image: dpage/pgadmin4
  portainer:
    image: portainer/portainer-ce
  rabbitmq:
    image: rabbitmq:3-management-alpine
  shopping.aggregator:
    build:
      context: C:\Users\hope\source\repos\ASPNETMicrosevices\ASPNETrun-microsevices
      dockerfile: ApiGateways/Shopping.Aggregator/Dockerfile
    image: shoppingaggregator
version: '3.4'
volumes:
  mongo_data: {}
  pgadmin_data: {}
  portainer_data: {}
  postgres_data: {}